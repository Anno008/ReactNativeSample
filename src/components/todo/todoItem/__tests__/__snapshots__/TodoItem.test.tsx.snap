// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TodoItem component test should render todo item with finished set to false 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    deleteTodo={[MockFunction]}
    todo={
      Object {
        "finished": false,
        "id": 1,
        "name": "test",
      }
    }
    toggleTodo={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "animation": "fadeInLeft",
      "children": <TouchableOpacity
        activeOpacity={0.2}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "stretch",
            "borderColor": "#d6d7da",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "justifyContent": "space-between",
            "margin": 5,
            "padding": 5,
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "flex": 1,
                "fontSize": 30,
                "fontWeight": "bold",
              },
              null,
            ]
          }
        >
          test
        </Text>
        <Button
          onPress={[Function]}
          title="Delete"
        />
      </TouchableOpacity>,
      "delay": 0,
      "direction": "normal",
      "duration": undefined,
      "easing": undefined,
      "iterationCount": 1,
      "iterationDelay": 0,
      "onAnimationBegin": [Function],
      "onAnimationEnd": [Function],
      "onTransitionBegin": [Function],
      "onTransitionEnd": [Function],
      "style": undefined,
      "transition": undefined,
      "useNativeDriver": false,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "activeOpacity": 0.2,
        "children": Array [
          <Text
            style={
              Array [
                Object {
                  "flex": 1,
                  "fontSize": 30,
                  "fontWeight": "bold",
                },
                null,
              ]
            }
          >
            test
          </Text>,
          <Button
            onPress={[Function]}
            title="Delete"
          />,
        ],
        "onPress": [Function],
        "style": Object {
          "alignItems": "center",
          "alignSelf": "stretch",
          "borderColor": "#d6d7da",
          "borderRadius": 4,
          "borderWidth": 1,
          "flexDirection": "row",
          "justifyContent": "space-between",
          "margin": 5,
          "padding": 5,
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "test",
            "style": Array [
              Object {
                "flex": 1,
                "fontSize": 30,
                "fontWeight": "bold",
              },
              null,
            ],
          },
          "ref": null,
          "rendered": "test",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "onPress": [Function],
            "title": "Delete",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "animation": "fadeInLeft",
        "children": <TouchableOpacity
          activeOpacity={0.2}
          onPress={[Function]}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "stretch",
              "borderColor": "#d6d7da",
              "borderRadius": 4,
              "borderWidth": 1,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "margin": 5,
              "padding": 5,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "flex": 1,
                  "fontSize": 30,
                  "fontWeight": "bold",
                },
                null,
              ]
            }
          >
            test
          </Text>
          <Button
            onPress={[Function]}
            title="Delete"
          />
        </TouchableOpacity>,
        "delay": 0,
        "direction": "normal",
        "duration": undefined,
        "easing": undefined,
        "iterationCount": 1,
        "iterationDelay": 0,
        "onAnimationBegin": [Function],
        "onAnimationEnd": [Function],
        "onTransitionBegin": [Function],
        "onTransitionEnd": [Function],
        "style": undefined,
        "transition": undefined,
        "useNativeDriver": false,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "activeOpacity": 0.2,
          "children": Array [
            <Text
              style={
                Array [
                  Object {
                    "flex": 1,
                    "fontSize": 30,
                    "fontWeight": "bold",
                  },
                  null,
                ]
              }
            >
              test
            </Text>,
            <Button
              onPress={[Function]}
              title="Delete"
            />,
          ],
          "onPress": [Function],
          "style": Object {
            "alignItems": "center",
            "alignSelf": "stretch",
            "borderColor": "#d6d7da",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "justifyContent": "space-between",
            "margin": 5,
            "padding": 5,
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "test",
              "style": Array [
                Object {
                  "flex": 1,
                  "fontSize": 30,
                  "fontWeight": "bold",
                },
                null,
              ],
            },
            "ref": null,
            "rendered": "test",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "onPress": [Function],
              "title": "Delete",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`TodoItem component test should render todo item with finished set to true 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    deleteTodo={[MockFunction]}
    todo={
      Object {
        "finished": true,
        "id": 1,
        "name": "test",
      }
    }
    toggleTodo={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "animation": "fadeInLeft",
      "children": <TouchableOpacity
        activeOpacity={0.2}
        onPress={[Function]}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "stretch",
            "borderColor": "#d6d7da",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "justifyContent": "space-between",
            "margin": 5,
            "padding": 5,
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "flex": 1,
                "fontSize": 30,
                "fontWeight": "bold",
              },
              Object {
                "textDecorationLine": "line-through",
                "textDecorationStyle": "solid",
              },
            ]
          }
        >
          test
        </Text>
        <Button
          onPress={[Function]}
          title="Delete"
        />
      </TouchableOpacity>,
      "delay": 0,
      "direction": "normal",
      "duration": undefined,
      "easing": undefined,
      "iterationCount": 1,
      "iterationDelay": 0,
      "onAnimationBegin": [Function],
      "onAnimationEnd": [Function],
      "onTransitionBegin": [Function],
      "onTransitionEnd": [Function],
      "style": undefined,
      "transition": undefined,
      "useNativeDriver": false,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "activeOpacity": 0.2,
        "children": Array [
          <Text
            style={
              Array [
                Object {
                  "flex": 1,
                  "fontSize": 30,
                  "fontWeight": "bold",
                },
                Object {
                  "textDecorationLine": "line-through",
                  "textDecorationStyle": "solid",
                },
              ]
            }
          >
            test
          </Text>,
          <Button
            onPress={[Function]}
            title="Delete"
          />,
        ],
        "onPress": [Function],
        "style": Object {
          "alignItems": "center",
          "alignSelf": "stretch",
          "borderColor": "#d6d7da",
          "borderRadius": 4,
          "borderWidth": 1,
          "flexDirection": "row",
          "justifyContent": "space-between",
          "margin": 5,
          "padding": 5,
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "test",
            "style": Array [
              Object {
                "flex": 1,
                "fontSize": 30,
                "fontWeight": "bold",
              },
              Object {
                "textDecorationLine": "line-through",
                "textDecorationStyle": "solid",
              },
            ],
          },
          "ref": null,
          "rendered": "test",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "onPress": [Function],
            "title": "Delete",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "animation": "fadeInLeft",
        "children": <TouchableOpacity
          activeOpacity={0.2}
          onPress={[Function]}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "stretch",
              "borderColor": "#d6d7da",
              "borderRadius": 4,
              "borderWidth": 1,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "margin": 5,
              "padding": 5,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "flex": 1,
                  "fontSize": 30,
                  "fontWeight": "bold",
                },
                Object {
                  "textDecorationLine": "line-through",
                  "textDecorationStyle": "solid",
                },
              ]
            }
          >
            test
          </Text>
          <Button
            onPress={[Function]}
            title="Delete"
          />
        </TouchableOpacity>,
        "delay": 0,
        "direction": "normal",
        "duration": undefined,
        "easing": undefined,
        "iterationCount": 1,
        "iterationDelay": 0,
        "onAnimationBegin": [Function],
        "onAnimationEnd": [Function],
        "onTransitionBegin": [Function],
        "onTransitionEnd": [Function],
        "style": undefined,
        "transition": undefined,
        "useNativeDriver": false,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "activeOpacity": 0.2,
          "children": Array [
            <Text
              style={
                Array [
                  Object {
                    "flex": 1,
                    "fontSize": 30,
                    "fontWeight": "bold",
                  },
                  Object {
                    "textDecorationLine": "line-through",
                    "textDecorationStyle": "solid",
                  },
                ]
              }
            >
              test
            </Text>,
            <Button
              onPress={[Function]}
              title="Delete"
            />,
          ],
          "onPress": [Function],
          "style": Object {
            "alignItems": "center",
            "alignSelf": "stretch",
            "borderColor": "#d6d7da",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "justifyContent": "space-between",
            "margin": 5,
            "padding": 5,
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "test",
              "style": Array [
                Object {
                  "flex": 1,
                  "fontSize": 30,
                  "fontWeight": "bold",
                },
                Object {
                  "textDecorationLine": "line-through",
                  "textDecorationStyle": "solid",
                },
              ],
            },
            "ref": null,
            "rendered": "test",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "onPress": [Function],
              "title": "Delete",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
